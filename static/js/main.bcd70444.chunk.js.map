{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","React","memo","todos","onSelect","selectedTodoId","className","map","currentTodo","id","completed","title","type","onClick","TodoFilter","selectFilter","filterTodos","searchText","setSearchText","applyQuery","reset","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","todo","onClose","useState","author","setAuthor","isUserLoading","setIsUserLoading","useEffect","userId","finally","href","email","name","App","setTodos","query","setQuery","appliedQuery","setAppliedQuery","choosenTodoId","setChoosenTodoId","setSelectFilter","f","timerId","clearTimeout","args","debounce","choseenTodo","useMemo","find","useCallback","getsTodos","a","allTodos","visibleTodos","filter","text","toLowerCase","trim","toLowerTitle","completedTodo","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcd70444.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number;\n  onSelect: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  onSelect,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(currentTodo => (\n          <tr\n            data-cy=\"todo\"\n            key={currentTodo.id}\n            className={currentTodo.id === selectedTodoId\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{currentTodo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                currentTodo.completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`has-text-${currentTodo.completed ? 'success' : 'danger'}`}\n              >\n                {currentTodo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelect(currentTodo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={currentTodo.id === selectedTodoId\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ntype Props = {\n  selectFilter: string;\n  filterTodos: (chooseSelect: string) => void;\n  searchText: string;\n  setSearchText: (text: string) => void;\n  applyQuery: (text: string) => void;\n  reset: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectFilter,\n  filterTodos,\n  searchText,\n  setSearchText,\n  applyQuery,\n  reset,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectFilter}\n            onChange={(event) => filterTodos(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchText}\n          onChange={event => {\n            setSearchText(event.target.value);\n            applyQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchText && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo | undefined,\n  onClose: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [author, setAuthor] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(false);\n\n  useEffect(() => {\n    setIsUserLoading(true);\n\n    if (todo) {\n      getUser(todo.userId)\n        .then(setAuthor)\n        .finally(() => setIsUserLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {`${todo?.title}`}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${author?.email}`}>\n                {author?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst debounce = (f: (...args: string[]) => void, delay: number | undefined) => {\n  let timerId: NodeJS.Timeout;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [choosenTodoId, setChoosenTodoId] = useState(0);\n  const [selectFilter, setSelectFilter] = useState('all');\n\n  const applyQuery = debounce(setAppliedQuery, 1000);\n\n  const choseenTodo = useMemo(() => {\n    return todos.find(todo => todo.id === choosenTodoId);\n  }, [choosenTodoId, todos]);\n\n  const reset = useCallback(() => {\n    setQuery('');\n    setAppliedQuery('');\n  }, []);\n\n  const getsTodos = useCallback(async () => {\n    const allTodos = await getTodos();\n\n    setTodos(allTodos);\n  }, []);\n\n  useEffect(() => {\n    getsTodos();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const text = appliedQuery.toLowerCase().trim();\n      const toLowerTitle = todo.title.toLowerCase();\n      const completedTodo = todo.completed;\n\n      switch (selectFilter) {\n        case 'all':\n          return toLowerTitle.includes(text);\n        case 'active':\n          return toLowerTitle.includes(text)\n            && !completedTodo;\n        case 'completed':\n          return toLowerTitle.includes(text)\n            && completedTodo;\n        default:\n          return false;\n      }\n    });\n  }, [todos, appliedQuery, selectFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectFilter={selectFilter}\n                filterTodos={setSelectFilter}\n                searchText={query}\n                setSearchText={setQuery}\n                applyQuery={applyQuery}\n                reset={reset}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelect={setChoosenTodoId}\n                    selectedTodoId={choosenTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {choosenTodoId ? (\n        <TodoModal\n          todo={choseenTodo}\n          onClose={setChoosenTodoId}\n        />\n      ) : ''}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}